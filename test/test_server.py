import pytest
import mock
from server import Server

def test_add_players():
    server = Server()

    # Add first player
    server.add_player("Alice")
    assert server.players == ["Alice"]

    # Add second player
    server.add_player("Bob")
    assert server.players == ["Alice", "Bob"]

    # Server should not allow more than two players
    server.add_player("Charlie")
    assert server.players == ["Alice", "Bob"]

def test_switch_player():
    mock_socket = mock.Mock()
    server = Server(
        kwargs = {
            "players": ["Alice", "Bob"],
            "turn": "Alice",
            "waiting": "Bob",
            "markers": {"Alice": "X", "Bob": "O"},
            "connections": {"Alice": mock_socket, "Bob": mock_socket},
        }
    )
    server.prompt_players()
    assert server.turn == "Bob"
    assert server.waiting == "Alice"

def test_generate_board():
    server = Server()
    server.generate_board()
    print(server.board)
    assert server.board == [
        ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
        ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
        ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
        ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
        ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
        ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]']
    ]

def test_mark_board():
    mock_socket = mock.Mock()
    server = Server(
        kwargs = {
            "turn": "Alice",
            "waiting": "Bob",
            "markers": {"Alice": "X", "Bob": "O"},
            "connections": {"Alice": mock_socket, "Bob": mock_socket},
            "board": [
                ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[O]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[O]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[O]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]']
            ]
        }
    )

    server.mark_board(1)
    assert server.board == [
        ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
        ['[O]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
        ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
        ['[O]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
        ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
        ['[O]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]']
    ]

    server.turn = "Bob"
    server.mark_board(2)
    assert server.board == [
        ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
        ['[O]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
        ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
        ['[O]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
        ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
        ['[O]', '[O]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]']
    ]

    server.turn = "Alice"
    server.mark_board(1)
    assert server.board == [
        ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
        ['[O]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
        ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
        ['[O]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
        ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
        ['[O]', '[O]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]']
    ]

    assert server.column_full == True

def test_check_winner():
    server = Server(
        kwargs = {
            "turn": "Alice",
            "markers": {"Alice": "X"},
            "board": [
                ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]']
            ]
        }
    )
    assert server.check_winner() == True

    server = Server(
        kwargs = {
            "turn": "Alice",
            "markers": {"Alice": "O"},
            "board": [
                ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[ ]', '[ ]', '[ ]', '[ ]', '[O]', '[O]', '[O]', '[O]', '[O]']
            ]
        }
    )
    assert server.check_winner() == True

    server = Server(
        kwargs = {
            "turn": "Alice",
            "markers": {"Alice": "X"},
            "board": [
                ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[ ]', '[ ]', '[ ]', '[ ]', '[X]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[ ]', '[ ]', '[ ]', '[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[ ]', '[ ]', '[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[ ]', '[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]']
            ]
        }
    )
    assert server.check_winner() == True

    server = Server(
        kwargs = {
            "turn": "Alice",
            "markers": {"Alice": "O"},
            "board": [
                ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[O]'],
                ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[O]', '[ ]'],
                ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[O]', '[ ]', '[ ]'],
                ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[O]', '[ ]', '[ ]', '[ ]'],
                ['[ ]', '[ ]', '[ ]', '[ ]', '[O]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]']
            ]
        }
    )
    assert server.check_winner() == True

    server = Server(
        kwargs = {
            "turn": "Alice",
            "markers": {"Alice": "X"},
            "board": [
                ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[O]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]']
            ]
        }
    )
    assert server.check_winner() == False


    server = Server(
        kwargs = {
            "turn": "Alice",
            "markers": {"Alice": "O"},
            "board": [
                ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[ ]', '[ ]', '[ ]', '[O]', '[O]', '[X]', '[O]', '[O]', '[O]']
            ]
        }
    )
    assert server.check_winner() == False

    server = Server(
        kwargs = {
            "turn": "Alice",
            "markers": {"Alice": "X"},
            "board": [
                ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[X]', '[ ]', '[ ]', '[ ]'],
                ['[ ]', '[ ]', '[ ]', '[ ]', '[X]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[ ]', '[ ]', '[ ]', '[O]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[ ]', '[ ]', '[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[ ]', '[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]']
            ]
        }
    )
    assert server.check_winner() == False

    server = Server(
        kwargs = {
            "turn": "Alice",
            "markers": {"Alice": "O"},
            "board": [
                ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[O]'],
                ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[O]', '[ ]'],
                ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[X]', '[ ]', '[ ]'],
                ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[O]', '[ ]', '[ ]', '[ ]'],
                ['[ ]', '[ ]', '[ ]', '[ ]', '[O]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[ ]', '[ ]', '[ ]', '[O]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]']
            ]
        }
    )
    assert server.check_winner() == False

def test_check_draw():
    server = Server(
        kwargs = {
            "turn": "Alice",
            "markers": {"Alice": "X"},
            "board": [
                ['[O]', '[X]', '[O]', '[X]', '[O]', '[X]', '[O]', '[X]', '[O]'],
                ['[O]', '[X]', '[O]', '[X]', '[O]', '[X]', '[O]', '[X]', '[O]'],
                ['[O]', '[X]', '[O]', '[X]', '[O]', '[X]', '[O]', '[X]', '[O]'],
                ['[X]', '[O]', '[X]', '[O]', '[X]', '[O]', '[X]', '[O]', '[X]'],
                ['[X]', '[O]', '[X]', '[O]', '[X]', '[O]', '[X]', '[O]', '[X]'],
                ['[X]', '[O]', '[X]', '[O]', '[X]', '[O]', '[X]', '[O]', '[X]']
            ]
        }
    )
    assert server.check_draw() == True

    server = Server(
        kwargs = {
            "turn": "Alice",
            "markers": {"Alice": "X"},
            "board": [
                ['[O]', '[X]', '[O]', '[X]', '[X]', '[X]', '[X]', '[X]', '[X]'],
                ['[O]', '[X]', '[O]', '[X]', '[O]', '[X]', '[O]', '[X]', '[O]'],
                ['[O]', '[X]', '[O]', '[X]', '[O]', '[X]', '[O]', '[X]', '[O]'],
                ['[X]', '[O]', '[X]', '[O]', '[X]', '[O]', '[X]', '[O]', '[X]'],
                ['[X]', '[O]', '[X]', '[O]', '[X]', '[O]', '[X]', '[O]', '[X]'],
                ['[X]', '[O]', '[X]', '[O]', '[X]', '[O]', '[X]', '[O]', '[X]']
            ]
        }
    )
    assert server.check_draw() == False

    server = Server(
        kwargs = {
            "turn": "Alice",
            "markers": {"Alice": "X"},
            "board": [
                ['[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]'],
                ['[X]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]', '[ ]']
            ]
        }
    )
    assert server.check_draw() == False
